name: Deploy docker staging

on:
    workflow_dispatch:
    push: 
        branches: ["master"]

env:
  DOCKER_HOST: ssh://root@darkbot
        
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Taskfile
        uses: darklab8/infra/.github/actions/install-taskfile@master

      - name: Set up Go
        uses: darklab8/infra/.github/actions/install-go@master

      # SOURCE_NAME: The branch or the tag
      # SOURCE_BRANCH: The branch or empty
      # SOURCE_TAG: The tag or empty
      - name: Find tags
        id: data
        run: |
          echo "BUILD_VERSION=${{github.run_number}}" >> $GITHUB_OUTPUT

      - name: Echo tags
        run: |
          echo ${{ steps.data.outputs.BUILD_VERSION }}
      
      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username darkwind8 --password-stdin

      - name: Install ssh key
        run: |
          mkdir ~/.ssh | true
          echo "${{ secrets.SSH_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_rsa
          echo "Host darkbot" > ~/.ssh/config
          echo "    HostName 37.27.207.42" >> ~/.ssh/config
          echo "    User root" >> ~/.ssh/config
          echo "    IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
          echo "    IdentitiesOnly yes" >> ~/.ssh/config
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/*
          ssh-keyscan -H 37.27.207.42 >> ~/.ssh/known_hosts | true
          ssh-keyscan -H darkbot >> ~/.ssh/known_hosts | true

      - name: Build image
        run: docker build --build-arg "BUILD_VERSION=${{ steps.data.outputs.BUILD_VERSION }}" --tag darkwind8/darkstat:${{ steps.data.outputs.BUILD_VERSION }} .
      - name: Push image
        run: |
          docker push darkwind8/darkstat:${{ steps.data.outputs.BUILD_VERSION }}
          docker tag darkwind8/darkstat:${{ steps.data.outputs.BUILD_VERSION }} darkwind8/darkstat:staging
          docker push darkwind8/darkstat:staging
          
      - name: Switch service image to new one
        run: |
          docker pull darkwind8/darkstat:staging && docker service update --image darkwind8/darkstat:staging darkstat-staging

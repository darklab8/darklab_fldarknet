package front

import (
	"github.com/darklab8/fl-darkstat/darkstat/front/fronttypes"
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"fmt"
	"strings"
)

func EngineDetailedUrl(engine configs_export.Engine) string {
	return "engines/engines_base_" + strings.ToLower(engine.Nickname)
}

templ EnginesTable(engines []configs_export.Engine, pinm PinMod, disco fronttypes.DiscoveryIDs) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:200px;">Engine</th>
				if pinm == PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				@ThDisco(disco)
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Impulse", "Speed"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Cruise", "Speed"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Cruise", "Charge Time"})
				</th>
				<th style="width:25px;">Class</th>
				<th style="width:25px;">Flame Effect</th>
				<th style="width:25px;">Trail Effect</th>
				<th style="width:25px;">Linear Drag</th>
				<th style="width:25px;">Max Force</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Reverse", "Fraction"})
				</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">HpType</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, engine := range engines {
				@TrFromMainTb(engine.Nickname, EngineDetailedUrl(engine), pinm) {
					@PinTd(engine.Nickname, engine.Name, pinm)
					@PinSelectLeftRight(pinm, EngineDetailedUrl(engine))
					@TdDisco(disco, engine.Nickname, engine.DiscoveryTechCompat)
					<td>{ strconv.Itoa(engine.Price) } </td>
					<td>{ strconv.FormatBool(configs_export.Buyable(engine.Bases)) }</td>
					<td>{ fmt.Sprintf("%.2f",engine.ImpulseSpeed) } </td>
					<td>{ strconv.Itoa(engine.CruiseSpeed) }</td>
					<td>{ strconv.Itoa(engine.CruiseChargeTime) }</td>
					<td>{ engine.HpType }</td>
					<td>{ engine.FlameEffect }</td>
					<td>{ engine.TrailEffect }</td>
					<td>{ strconv.Itoa(engine.LinearDrag) }</td>
					<td>{ strconv.Itoa(engine.MaxForce) }</td>
					<td>{ fmt.Sprintf("%.2f", engine.ReverseFraction) }</td>
					<td>{ engine.Nickname } </td>
					<td>{ engine.HpType } </td>
					<td>{ strconv.Itoa(engine.NameID) } </td>
					<td>{ strconv.Itoa(engine.InfoID) } </td>
					@TdInfoCardClick(configs_export.InfocardKey(engine.Nickname), engine.Nickname, pinm)
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ Engines(engines []configs_export.Engine, mode ShowEmpty, disco fronttypes.DiscoveryIDs) {
	@TabMenu(urls.Engines, mode, disco)
	@TabContent() {
		<div class="splitter">
			<div id="table-wrapper">
				<div id="table-top">
					@FilterBar(disco)
					<div id="table-top-main">
						@EnginesTable(engines, MainMode, disco)
					</div>
					<div id={ "table-top-main" + string(PinMode) } class="hidden">
						@EnginesTable(engines, PinMode, disco)
					</div>
				</div>
				<div id="table-bottom">
					<div id="table-bottom-main">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
					<div id={ "table-bottom-main" + string(PinMode) } class="hidden">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
				</div>
			</div>
			<div id="infocard_view">
				@InfocardShared()
			</div>
		</div>
	}
}

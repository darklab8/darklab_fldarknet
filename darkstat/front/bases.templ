package front

import (
	"github.com/darklab8/fl-darkstat/darkstat/front/fronttypes"
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/common/types"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"fmt"
	"strings"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
)

func InfocardURL(infocard_key configs_export.InfocardKey) string {
	return "infocards/info_" + strings.ToLower(string(infocard_key))
}

func BaseMarketGoodUrl(base configs_export.Base) string {
	return "bases/marketgoods/mg_" + strings.ToLower(base.Nickname)
}

templ BasesTable(bases []configs_export.Base, pinm PinMod) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="min-width:200px;">Base</th>
				if pinm == PinMode {
					<th style="min-width:50px;">Select</th>
					<th style="min-width:50px;">Select</th>
				}
				<th style="min-width:200px;">Owner - Faction</th>
				<th style="min-width:100px;">System</th>
				<th style="min-width:200px;">Base Nickname</th>
				<th style="min-width:50px;">System Nickname</th>
				<th style="min-width:50px;">Pos X</th>
				<th style="min-width:50px;">Pos Y</th>
				<th style="min-width:50px;">Pos Z</th>
				<th style="min-width:100px;">Base Name ID</th>
				<th style="min-width:100px;">Infocard ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, base := range bases {
				<tr
					id={ string(pinm) + "bottominfo_" + base.Nickname }
					hx-get={ types.GetCtx(ctx).SiteRoot + BaseMarketGoodUrl(base) }
					hx-trigger="mousedown"
					hx-target={ "#table-bottom-main" + string(pinm) }
					hx-swap="innerHTML"
					preload="mouseover"
					class={ templ.KV("hidden", pinm == PinMode) }
				>
					@PinTd(base.Nickname, base.Name, pinm)
					@PinSelectLeftRight(pinm, BaseMarketGoodUrl(base))
					<td>{ base.FactionName }</td>
					<td>{ base.System }</td>
					<td>{ base.Nickname }</td>
					<td>{ base.SystemNickname }</td>
					<td>{ fmt.Sprintf("%.0f", base.Pos.X) }</td>
					<td>{ fmt.Sprintf("%.0f", base.Pos.Y) }</td>
					<td>{ fmt.Sprintf("%.0f", base.Pos.Z) }</td>
					<td>{ strconv.Itoa(base.StridName) }</td>
					<td>{ strconv.Itoa(base.InfocardID) }</td>
					@TdInfoCardClick(base.Infocard, base.Nickname, pinm)
				</tr>
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ BasesT(bases []configs_export.Base, mode ShowEmpty) {
	@TabLayout() {
		@TabMenu(urls.Bases, mode)
		@TabContent() {
			<div class="splitter">
				<div id="table-wrapper">
					<div id="table-top">
						@FilterBar(fronttypes.DiscoveryIDs{})
						<div id="table-top-main">
							@BasesTable(bases, MainMode)
						</div>
						<div id={ "table-top-main" + string(PinMode) } class="hidden">
							@BasesTable(bases, PinMode)
						</div>
					</div>
					<div id="table-bottom">
						<div id="table-bottom-main">
							@BaseMarketGoodsBase()
						</div>
						<div id={ "table-bottom-main" + string(PinMode) } class="hidden">
							@BaseMarketGoodsBase()
						</div>
					</div>
				</div>
				<div id="infocard_view">
					@InfocardShared()
				</div>
			</div>
		}
	}
}

templ BaseMarketGoodsBase() {
	<table class="sortable">
		<thead>
			<tr class="flexed-tr">
				<th style="min-width:200px;">Good</th>
				<th style="min-width:100px;">Type</th>
				<th style="min-width:50px;">Price</th>
				<th style="min-width:50px;">Level Req'd</th>
				<th style="min-width:50px;">Reputation Req'd</th>
				<th style="min-width:50px;">Base Sells</th>
				<th style="min-width:50px;">Price Modifier</th>
				<th style="min-width:50px;">Price Base</th>
				<th style="min-width:300px;">Nickname</th>
				<th style="min-width:300px;">HpType</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			{ children... }
		</tbody>
	</table>
}

templ BaseMarketGoods(name string, goods []configs_export.MarketGood) {
	<div class="bottom_name">{ name }</div>
	@BaseMarketGoodsBase() {
		for _, good := range goods {
			<tr
				hx-get={ types.GetCtx(ctx).SiteRoot + InfocardURL(good.Infocard) }
				hx-trigger="click"
				hx-target="#infocard_view"
				hx-swap="innerHTML"
				preload="mouseover"
			>
				<td>{ good.Name }</td>
				<td>{ string(good.Type) }</td>
				<td>{ strconv.Itoa(good.Price) }</td>
				<td>{ strconv.Itoa(good.LevelRequired) }</td>
				<td>{ fmt.Sprintf("%.2f", good.RepRequired) }</td>
				<td>{ strconv.FormatBool(!good.IsBuyOnly) }</td>
				<td>{ fmt.Sprintf("%.2f", good.PriceModifier) }</td>
				<td>{ strconv.Itoa(good.PriceBase) }</td>
				<td>{ good.Nickname }</td>
				<td>{ good.HpType }</td>
				<td></td>
			</tr>
		}
	}
}

package front

import (
	"fmt"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"strconv"
	"strings"
)

func MineDetailedUrl(mine configs_export.Mine) string {
	return "mines/mines_base_" + strings.ToLower(mine.Nickname)
}

templ MinesTable(mines []configs_export.Mine, pinm PinMod, disco types.DiscoveryIDs) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="width:100px;">Mine</th>
				if pinm == PinMode {
					<th style="width:25px;">Select</th>
					<th style="width:25px;">Select</th>
				}
				@ThDisco(disco)
				<th style="width:25px;">Price</th>
				<th style="width:25px;">Buyable</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Ammo", "Price"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Hull", "Dmg"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Shield", "Dmg"})
				</th>
				<th style="width:25px;">Value</th>
				<th style="width:25px;">Refire</th>
				<th style="width:5px;">
						@MultiLinestring([]string{"Ammo", "Limit", "(+Max ","Cart.)"})
				</th>	
				<th style="width:25px;">
					@MultiLinestring([]string{"Detonation", "Distance"})
				</th>
				<th style="width:25px;">Radius</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Seek", "Dist."})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Top", "Speed"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Accele", "ration"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Linear", "Drag"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Life", "time"})
				</th>
				<th style="width:25px;">
					@MultiLinestring([]string{"Owner", "Safe"})
				</th>
				<th style="width:25px;">Toughness</th>
				<th style="width:25px;">Hit Pts</th>
				<th style="width:25px;">Lootable</th>
				<th style="width:25px;">Nickname</th>
				<th style="width:25px;">Name ID</th>
				<th style="width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, mine := range mines {
				@TrFromMainTb(mine.Nickname, MineDetailedUrl(mine), pinm) {
					@PinTd(mine.Nickname, mine.Name, pinm)
					@PinSelectLeftRight(pinm, MineDetailedUrl(mine))
					@TdDisco(disco, mine.Nickname, mine.DiscoveryTechCompat)
					<td>{ strconv.Itoa(mine.Price) } </td>
					<td>{ strconv.FormatBool(configs_export.Buyable(mine.Bases)) }</td>
					<td>{ strconv.Itoa(mine.AmmoPrice) } </td>
					<td>{ strconv.Itoa(mine.HullDamage) }</td>
					<td>{ strconv.Itoa(mine.ShieldDamage) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Value) }</td>
					<td>{ fmt.Sprintf("%.2f", mine.Refire) }</td>
					<td>{ GetAmmoLimitFormatted(mine.AmmoLimit) }</td>
					<td>{ fmt.Sprintf("%.2f", mine.DetonationDistance) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Radius) }</td>
					<td>{ strconv.Itoa(mine.SeekDistance) }</td>
					<td>{ strconv.Itoa(mine.TopSpeed) }</td>
					<td>{ strconv.Itoa(mine.Acceleration) }</td>
					<td>{ fmt.Sprintf("%.1f",mine.LinearDrag) }</td>
					<td>{ fmt.Sprintf("%.1f",mine.LifeTime) }</td>
					<td>{ strconv.Itoa(mine.OwnerSafe) }</td>
					<td>{ fmt.Sprintf("%.2f",mine.Toughness) }</td>
					<td>{ strconv.Itoa(mine.HitPts) }</td>
					<td>{ strconv.FormatBool(mine.Lootable) }</td>
					<td class="search-included">{ mine.Nickname } </td>
					<td class="search-included">{ strconv.Itoa(mine.IdsName) } </td>
					<td class="search-included">{ strconv.Itoa(mine.IdsInfo) } </td>
					@TdInfoCardClick(configs_export.InfocardKey(mine.Nickname), mine.Nickname, pinm, disco)
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ MinesT(mines []configs_export.Mine, mode2 ShowEmpty, disco types.DiscoveryIDs) {
	@TabMenu(urls.Mines, mode2, disco)
	@TabContent() {
		<div class="splitter">
			@LeftTable(){
				@TableTop(){
					@FilterBar(disco)
					<div id="table-top-main">
						@MinesTable(mines, MainMode, disco)
					</div>
					<div id={ "table-top-main" + string(PinMode) } class="hidden">
						@MinesTable(mines, PinMode, disco)
					</div>
				}
				@TableBottom(){
					<div id="table-bottom-main">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
					<div id={ "table-bottom-main" + string(PinMode) } class="hidden">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
				}
			}
			@InfocardTable(){
				@InfocardShared()
			}
		</div>
	}
}

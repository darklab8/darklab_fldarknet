package front

import (
	"github.com/darklab8/fl-darkstat/darkstat/front/fronttypes"
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"fmt"
	"strings"
)

func ShieldDetailedUrl(shield configs_export.Shield) string {
	return "shields/shields_base_" + strings.ToLower(shield.Nickname)
}

templ ShieldTable(shields []configs_export.Shield, pinm PinMod, disco fronttypes.DiscoveryIDs) {
	<table class="sortable">
		<thead>
			<tr>
				<th style="min-width:200px;">Shield</th>
				if pinm == PinMode {
					<th style="min-width:25px;">Select</th>
					<th style="min-width:25px;">Select</th>
				}
				@ThDisco(disco)
				<th style="min-width:25px;">Class</th>
				<th style="min-width:25px;">Type</th>
				<th style="min-width:25px;">Technology</th>
				<th style="min-width:25px;">Price</th>
				<th style="min-width:25px;">Buyable</th>
				<th style="min-width:25px;">Capacity</th>
				<th style="min-width:25px;">
					@MultiLinestring([]string{"Regen", "Rate"})
				</th>
				<th style="min-width:25px;">
					@MultiLinestring([]string{"Constant", "Power Draw"})
				</th>
				<th style="min-width:25px;">
					@MultiLinestring([]string{"Rebuild", "Power Draw"})
				</th>
				<th style="min-width:25px;">
					@MultiLinestring([]string{"Off", "Power Draw"})
				</th>
				<th style="min-width:25px;">Toughness</th>
				<th style="min-width:25px;">Hit Pts</th>
				<th style="min-width:25px;">Lootable</th>
				<th style="min-width:25px;">Nickname</th>
				<th style="min-width:25px;">HpType</th>
				<th style="min-width:25px;">Name ID</th>
				<th style="min-width:25px;">Info ID</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			for _, shield := range shields {
				@TrFromMainTb(shield.Nickname, ShieldDetailedUrl(shield), pinm) {
					@PinTd(shield.Nickname, shield.Name, pinm)
					@PinSelectLeftRight(pinm, ShieldDetailedUrl(shield))
					@TdDisco(disco, shield.Nickname, shield.DiscoveryTechCompat)
					<td>{ shield.Class }</td>
					<td>{ shield.Type }</td>
					<td>{ shield.Technology }</td>
					<td>{ strconv.Itoa(shield.Price) } </td>
					<td>{ strconv.FormatBool(configs_export.Buyable(shield.Bases)) }</td>
					<td>{ strconv.Itoa(shield.Capacity) } </td>
					<td>{ strconv.Itoa(shield.RegenerationRate) }</td>
					<td>{ strconv.Itoa(shield.ConstantPowerDraw) }</td>
					<td>{ strconv.Itoa(shield.RebuildPowerDraw) }</td>
					<td>{ strconv.Itoa(shield.OffRebuildTime) }</td>
					<td>{ fmt.Sprintf("%.2f",shield.Toughness) }</td>
					<td>{ strconv.Itoa(shield.HitPts) }</td>
					<td>{ strconv.FormatBool(shield.Lootable) }</td>
					<td>{ shield.Nickname } </td>
					<td>{ shield.HpType } </td>
					<td>{ strconv.Itoa(shield.IdsName) } </td>
					<td>{ strconv.Itoa(shield.IdsInfo) } </td>
					@TdInfoCardClick(configs_export.InfocardKey(shield.Nickname), shield.Nickname, pinm)
				}
			}
		</tbody>
	</table>
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ ShieldT(shields []configs_export.Shield,mode2 ShowEmpty, disco fronttypes.DiscoveryIDs) {
	@TabMenu(urls.Shields, mode2, disco)
	@TabContent() {
		<div class="splitter">
			<div id="table-wrapper">
				<div id="table-top">
					@FilterBar(disco)
					<div id="table-top-main">
						@ShieldTable(shields, MainMode, disco)
					</div>
					<div id={ "table-top-main" + string(PinMode) } class="hidden">
						@ShieldTable(shields, PinMode, disco)
					</div>
				</div>
				<div id="table-bottom">
					<div id="table-bottom-main">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
					<div id={ "table-bottom-main" + string(PinMode) } class="hidden">
						@GoodAtBaseSharedT(ShowAsCommodity(false))
					</div>
				</div>
			</div>
			<div id="infocard_view">
				@InfocardShared()
			</div>
		</div>
	}
}

templ HighlightableRow() {
	<tr
		onclick="RowHighlighter(this)"
	>
		{ children... }
	</tr>
}
